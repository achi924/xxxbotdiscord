import discord
import random
import string
import requests
import time
from discord.ext import commands
from discord import app_commands, ui
import os
from dotenv import load_dotenv
load_dotenv()
from server import server_on

intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ===== Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠
def generate_username(case):
    letters_set = string.ascii_lowercase if case == "lower" else string.ascii_uppercase
    first_letter = random.choice(letters_set)
    number = str(random.randint(0, 9))
    letters = ''.join(random.choices(letters_set, k=2))
    return f"{first_letter}_{number}{letters}"

# ===== Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
class UsernameCheckModal(ui.Modal, title="üîç Roblox Username Checker"):
    amount = ui.TextInput(label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ", placeholder="‡πÄ‡∏ä‡πà‡∏ô 10", required=True)
    delay = ui.TextInput(label="‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå (ms) ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö", placeholder="‡πÄ‡∏ä‡πà‡∏ô 300", required=True)
    case = ui.TextInput(label="‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡∏ç‡πà (‡∏û‡∏¥‡∏° 'lower' ‡∏´‡∏£‡∏∑‡∏≠ 'upper')", placeholder="lower ‡∏´‡∏£‡∏∑‡∏≠ upper", required=True)

    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)

        try:
            amount = int(self.amount.value)
            delay = int(self.delay.value) / 1000
            case_type = self.case.value.lower()

            if case_type not in ['lower', 'upper']:
                await interaction.followup.send("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å 'lower' ‡∏´‡∏£‡∏∑‡∏≠ 'upper' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", ephemeral=True)
                return

            valid_usernames = []
            for _ in range(amount):
                username = generate_username(case_type)
                url = f"https://auth.roblox.com/v2/usernames/validate?request.username={username}&request.birthday=2000-01-01&request.context=Signup"
                try:
                    res = requests.get(url)
                    data = res.json()
                    if data.get("message") == "Username is valid":
                        valid_usernames.append(username)
                except:
                    pass
                time.sleep(delay)

            if valid_usernames:
                embed = discord.Embed(
                    title="‚úÖ Valid Roblox Usernames",
                    description="\n".join([f"`{u}`" for u in valid_usernames]),
                    color=discord.Color.green()
                )
                embed.set_footer(text=f"Requested by {interaction.user.name}", icon_url=interaction.user.display_avatar.url)
                # embed.set_thumbnail(url='https://cdn.discordapp.com/attachments/889976848581287946/1193140899987865600/Herrscher.of.the.Void.full.2866346.gif?ex=65aba20e&is=65992d0e&hm=9afd68f45f0972ffadbaf18375adb52cf6e80cf59d83bbf6c0ecf1ca6e51a1e9&')
                ima = "https://i.gifer.com/7efs.gif"
                embed.set_image(url=ima)

                try:
                    await interaction.user.send(embed=embed)
                    await interaction.followup.send("‚úÖ ‡∏™‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
                except discord.Forbidden:
                    await interaction.followup.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î DM ‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True)
            else:
                await interaction.followup.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢", ephemeral=True)

        except ValueError:
            await interaction.followup.send("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", ephemeral=True)

# ===== ‡∏õ‡∏∏‡πà‡∏° Start ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î Modal
class StartButton(ui.View):
    @ui.button(label="üöÄ Start", style=discord.ButtonStyle.primary)
    async def start(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(UsernameCheckModal())

# ===== ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /setup
@bot.tree.command(name="setup", description="‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó")
async def setup(interaction: discord.Interaction):

    username = interaction.user.display_name  # ‡πÉ‡∏ä‡πâ interaction ‡πÅ‡∏ó‡∏ô ctx      

    embed = discord.Embed(title="\nRoblox Check User", description=f"**‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠ Roblox + ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ !**", color=0x000000)
    embed.set_author(name=username)
    embed.add_field(name="- üìÑRoblox Username Checker", value="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠ Roblox ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡∏î‡∏≤‡∏¢! \n ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° Start ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üé≤",inline=False)
    embed.set_image(url="https://www.icegif.com/wp-content/uploads/2023/04/icegif-627.gif")
    embed.set_footer(text="Powered by Balthazar")
    await interaction.response.send_message(embed=embed, view=StartButton())

# ===== ‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"‚úÖ Bot is online as {bot.user}")
    await bot.change_presence(activity=discord.Streaming(name='‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Å‡∏ä‡∏∑‡πà‡∏≠ Roblox', url='https://www.twitch.tv/kerlf'))
        try:
        with open('image.gif', 'rb') as avatar:
            await client.user.edit(avatar=avatar.read())
        print('Animated avatar uploaded successfully!')
    except Exception as e:
        print("Failed to upload animated avatar:", e)

server_on()  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô server_on ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Flask

bot.run(os.getenv("TOKEN"))  # ‡πÉ‡∏ä‡πâ TOKEN ‡∏à‡∏≤‡∏Å environment variable
